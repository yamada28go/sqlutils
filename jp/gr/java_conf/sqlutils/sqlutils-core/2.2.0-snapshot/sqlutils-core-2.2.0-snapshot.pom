<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>jp.gr.java_conf.sqlutils</groupId>
  <artifactId>sqlutils-core</artifactId>

  <version>2.2.0-snapshot</version>
  <name>sqlutils-core</name>
  <packaging>jar</packaging>

<properties>
  <github.global.server>github</github.global.server>
</properties>

  <developers>
    <developer>
      <name>M.Hamanishi</name>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>The MIT License</name>
      <url>LICENSE.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <dependencies>

    <!-- commons -->
    <dependency>
      <groupId>commons-dbutils</groupId>
      <artifactId>commons-dbutils</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>1.8</version>
      <exclusions>
	<exclusion>
	  <groupId>commons-logging</groupId>
	  <artifactId>commons-logging</artifactId>
	</exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.4</version>
    </dependency>

    <!-- ↑で除外したjakarta-commons-loggingの代りの、slf4jブリッジ -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.6.2</version>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.1</version>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
	<filtering>false</filtering>
	<directory>src/main/resources</directory>
      </resource>
      <resource>
	<filtering>false</filtering>
	<directory>src/main/java</directory>
	<includes>
	  <include>**</include>
	</includes>
	<excludes>
	  <exclude>**/*.java</exclude>
	</excludes>
      </resource>
    </resources>

    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<configuration>
	  <source>1.6</source>
	  <target>1.6</target>
	  <encoding>UTF-8</encoding>
	  <optimize>true</optimize>
	  <debug>true</debug>
	</configuration>
      </plugin>
      <!-- <plugin>
	   <groupId>org.apache.maven.plugins</groupId>
	   <artifactId>maven-eclipse-plugin</artifactId>
	   <version>2.8</version>
	   <configuration>
	   <downloadSources>true</downloadSources>
	   <useProjectReferences>false</useProjectReferences>m2eプラグインの場合無視される模様
	   </configuration>
	   </plugin> -->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-source-plugin</artifactId>
	<executions>
	  <execution>
	    <phase>package</phase>
	    <goals>
	      <goal>jar</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>

      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
        <configuration>
          <!-- jarファイルをディプロイする時のコミットメッセージ -->
          <message>Maven artifacts for ${project.version}</message>
          <!-- Jekyllという静的ページを生成するツールは無効 -->
          <noJekyll>true</noJekyll>
          <!-- 1.で指定したパスと同じものを指定 -->
          <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
          <!-- Mavenリポジトリにするリモートのブランチ名 -->
          <branch>refs/heads/mvn-repo</branch>
          <includes><include>**/*</include></includes>
          <!-- GitHubリポジトリ名 -->
          <repositoryName>sqlutils</repositoryName>
          <!-- GitHubユーザ名  -->
          <repositoryOwner>yamada28go</repositoryOwner>
        </configuration>
        <executions>
          <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
          <execution>
            <goals>
              <goal>site</goal>
            </goals>
            <phase>deploy</phase>
          </execution>
        </executions>
      </plugin>

      </plugins>
    </build>

    <distributionManagement>
      <repository>
        <id>internal.repo</id>
        <name>Temporary Staging Repository</name>
        <url>file://${project.build.directory}/mvn-repo</url>
      </repository>
    </distributionManagement>
    

  </project>
